package io.mycat.ice.mapping;

import io.mycat.ice.domain.User;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from user",
        "where USER_ID = #{userId,jdbcType=CHAR}"
    })
    int deleteByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into user (USER_ID, ALIAS, ",
        "PASSWORD, USER_TYPE, ",
        "STATUS, NOTE, LAST_UPDATED)",
        "values (#{userId,jdbcType=CHAR}, #{alias,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=CHAR}, #{userType,jdbcType=TINYINT}, ",
        "#{status,jdbcType=TINYINT}, #{note,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "USER_ID, ALIAS, PASSWORD, USER_TYPE, STATUS, NOTE, LAST_UPDATED",
        "from user",
        "where USER_ID = #{userId,jdbcType=CHAR}"
    })
    @Results({
        @Result(column="USER_ID", property="userId", jdbcType=JdbcType.CHAR, id=true),
        @Result(column="ALIAS", property="alias", jdbcType=JdbcType.VARCHAR),
        @Result(column="PASSWORD", property="password", jdbcType=JdbcType.CHAR),
        @Result(column="USER_TYPE", property="userType", jdbcType=JdbcType.TINYINT),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP)
    })
    User selectByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "USER_ID, ALIAS, PASSWORD, USER_TYPE, STATUS, NOTE, LAST_UPDATED",
        "from user"
    })
    @Results({
        @Result(column="USER_ID", property="userId", jdbcType=JdbcType.CHAR, id=true),
        @Result(column="ALIAS", property="alias", jdbcType=JdbcType.VARCHAR),
        @Result(column="PASSWORD", property="password", jdbcType=JdbcType.CHAR),
        @Result(column="USER_TYPE", property="userType", jdbcType=JdbcType.TINYINT),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP)
    })
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated
     */
    @Update({
        "update user",
        "set ALIAS = #{alias,jdbcType=VARCHAR},",
          "PASSWORD = #{password,jdbcType=CHAR},",
          "USER_TYPE = #{userType,jdbcType=TINYINT},",
          "STATUS = #{status,jdbcType=TINYINT},",
          "NOTE = #{note,jdbcType=VARCHAR},",
          "LAST_UPDATED = #{lastUpdated,jdbcType=TIMESTAMP}",
        "where USER_ID = #{userId,jdbcType=CHAR}"
    })
    int updateByPrimaryKey(User record);
}